name: release-runners

on:
  repository_dispatch:
    types: [release-runners]
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
      build_date:
        description: 'build date'
        required: true

permissions:
  contents: read # for actions/checkout to fetch code

env:
  VERSION: ${{ github.event.inputs.version }}
  BUILD_DATE: ${{ github.event.inputs.build_date }}
  LIBCRYPTO_VERSION: "3.3.2-r0"
  ECR_REGISTRY: 167290662341.dkr.ecr.us-west-2.amazonaws.com
  TF_RUNNER_REPOSITORY: tf-runner
  AWS_REGION: us-west-2

jobs:
  release-base:
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access
    steps:
      - name: Check out
        uses: actions/checkout@b80ff79f1755d06ba70441c368a6fe801f5f3a62 # v4.0.0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
        with:
          buildkitd-flags: "--debug"
      - name: Publish multi-arch tf-runner base image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          push: true
          no-cache: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./runner-base.Dockerfile
          build-args: |
            LIBCRYPTO_VERSION=${{ env.LIBCRYPTO_VERSION }}
          platforms: linux/amd64,linux/arm64 #,linux/arm/v7
          tags: |
            ${{ ECR_REGISTRY }}/${{ TF_RUNNER_REPOSITORY }}:${{ env.VERSION }}-base
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}

  release-mpl:
    needs: release-base
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access
    strategy:
      matrix:
        tf_version: [1.0.11, 1.1.9, 1.2.9, 1.3.9, 1.4.6, 1.5.5]
    steps:
      - name: Check out
        uses: actions/checkout@b80ff79f1755d06ba70441c368a6fe801f5f3a62 # v4.0.0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
        with:
          buildkitd-flags: "--debug"
      - name: Publish multi-arch tf-runner MPL images
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          push: true
          no-cache: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./runner.Dockerfile
          platforms: linux/amd64,linux/arm64 #,linux/arm/v7
          build-args: |
            BASE_IMAGE=${{ ECR_REGISTRY }}/${{ TF_RUNNER_REPOSITORY }}:${{ env.VERSION }}-base
            TF_VERSION=${{ matrix.tf_version }}
            LIBCRYPTO_VERSION=${{ env.LIBCRYPTO_VERSION }}
          tags: |
            ${{ ECR_REGISTRY }}/${{ TF_RUNNER_REPOSITORY }}:${{ env.VERSION }}-tf-${{ matrix.tf_version }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
