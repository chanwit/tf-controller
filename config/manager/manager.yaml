---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tofu-controller
  labels:
    control-plane: tofu-controller
spec:
  selector:
    matchLabels:
      control-plane: tofu-controller
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: tofu-controller
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: tofu-controller
      securityContext:
        fsGroup: 1337
      containers:
      - name: manager
        image: flux-iac/tofu-controller
        imagePullPolicy: IfNotPresent
        command:
        - /sbin/tini
        - --
        - tofu-controller
        args:
        - --watch-all-namespaces
        - --log-level=info
        - --log-encoding=json
        - --enable-leader-election
        - --concurrent=1
        ports:
        - containerPort: 8080
          name: http-prom
        - containerPort: 9440
          name: healthz
          protocol: TCP
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RUNNER_POD_IMAGE
          value: flux-iac/tf-runner
        securityContext:
          capabilities:
            drop: ["ALL"]
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
          readOnlyRootFilesystem: true
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 64Mi
        volumeMounts:
          - name: temp
            mountPath: /tmp
      volumes:
        - name: temp
          emptyDir: {}
